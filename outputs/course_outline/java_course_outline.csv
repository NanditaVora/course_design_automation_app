sprint_no,sprint_name,learning_objectives,problem_task_completed
1,Write a 'Hello World' program in Java,"Understand the basics of Java programming.,Learn to declare variables and use data types in Java.,Familiarize with Java operators.",Set up the development environment and write a 'Hello World' program; introduce the basic structure of a Java program.
2,"Write programs using conditional statements, Implement loops in Java","Understand and implement conditional statements in Java.,Learn to use different types of loops in Java.",Add functionality to check conditions and iterate over a set of actions in the Student Management System.
3,Create classes and objects in Java,"Understand the concept of classes and objects in Java.,Learn to define and instantiate classes and objects.",Define the Student class and create instances of students in the Student Management System.
4,"Write functions in Java, Call functions in a program","Understand function definition and calling in Java.,Learn to implement function overloading.","Implement functions to add, update, and delete student records in the Student Management System."
5,Create and manipulate arrays in Java,"Understand array declaration and initialization.,Learn to access and manipulate array elements.",Use arrays to store and manage student records in the Student Management System.
6,Implement inheritance in Java programs,"Understand the concept of inheritance in Java.,Learn to extend classes using inheritance.",Create a subclass of Student to manage different types of students in the Student Management System.
7,Implement polymorphism in Java programs,"Understand the concept of polymorphism in Java.,Learn to override and overload methods using polymorphism.",Implement polymorphism to handle different student operations in the Student Management System.
8,Implement encapsulation using access modifiers,"Understand the concept of encapsulation in Java.,Learn to use access modifiers to protect data within a class.",Implement encapsulation to protect student data in the Student Management System.
9,Implement abstraction using abstract classes and interfaces,"Understand the concept of abstraction in Java.,Learn to define abstract classes and implement interfaces.",Use abstraction to define common behaviors for different types of students in the Student Management System.
10,Write programs to handle exceptions,"Understand exception handling using try-catch blocks.,Learn to throw and catch exceptions and create custom exceptions.",Implement exception handling to manage errors in the Student Management System.
